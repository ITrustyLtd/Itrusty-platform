        // Remove 'tables/' prefix
        let path = oldPath.replace(/^tables\//, '');
        
        // Split table name and ID if present
        const parts = path.split('?');
        const tablePath = parts[0];
        const queryString = parts[1] || '';
        
        // Check if it's a single record request (has UUID)
        const uuidPattern = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i;
        const match = tablePath.match(uuidPattern);
        
        if (match) {
            // Single record: tables/customers/{id}
            const id = match[0];
            const table = tablePath.split('/')[0];
            return {
                path: `/rest/v1/${table}?id=eq.${id}`,
                isSingle: true
            };
        }
        
        // List request: tables/customers?page=1&limit=100
        const params = new URLSearchParams(queryString);
        const supabaseParams = new URLSearchParams();
        
        // Translate pagination
        const page = parseInt(params.get('page')) || 1;
        const limit = parseInt(params.get('limit')) || 100;
        const offset = (page - 1) * limit;
        
        supabaseParams.set('limit', limit);
        supabaseParams.set('offset', offset);
        
        // Translate sorting
        const sort = params.get('sort');
        if (sort) {
            // OLD: sort=-created_at or sort=name
            const descending = sort.startsWith('-');
            const field = descending ? sort.substring(1) : sort;
            supabaseParams.set('order', `${field}.${descending ? 'desc' : 'asc'}`);
        }
        
        // Translate search
        const search = params.get('search');
        if (search) {
            // OLD: search=name:John or search=John
            if (search.includes(':')) {
                const [field, value] = search.split(':');
                supabaseParams.set(field, `ilike.%${value}%`);
            } else {
                // Full-text search on common fields
                supabaseParams.set('or', `(name.ilike.%${search}%,customer_name.ilike.%${search}%,description.ilike.%${search}%)`);
            }
        }
        
        const table = tablePath;
        return {
            path: `/rest/v1/${table}?${supabaseParams.toString()}`,
            isSingle: false
        };
